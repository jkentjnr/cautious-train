<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Log_Address_Force_Overwrite</name>
        <label>Log: Address Force Overwrite</label>
        <locationX>1040</locationX>
        <locationY>4166</locationY>
        <actionName>movedata__WriteToLogFlowComponent</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Evaluate_Existing_Values_On_Address_Fields</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>Detail</name>
            <value>
                <stringValue>Force Overwrite: {!ForceOverwriteAddress}</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>LogList</name>
            <value>
                <elementReference>Logs</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Message</name>
            <value>
                <stringValue>Address Force Overwrite (when any address value exists)</stringValue>
            </value>
        </inputParameters>
        <nameSegment>movedata__WriteToLogFlowComponent</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>LogsJSON</assignToReference>
            <name>LogJson</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>Logs</assignToReference>
            <name>LogList</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Log_Address_Has_Existing_Data_False</name>
        <label>Log: Address Has Existing Data</label>
        <locationX>1491</locationX>
        <locationY>4466</locationY>
        <actionName>movedata__WriteToLogFlowComponent</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Evaluate_Address_Quality_Score_No_Data</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>Detail</name>
            <value>
                <stringValue>false</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>LogList</name>
            <value>
                <elementReference>Logs</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Message</name>
            <value>
                <stringValue>Mailing Address - Has Existing Data</stringValue>
            </value>
        </inputParameters>
        <nameSegment>movedata__WriteToLogFlowComponent</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>LogsJSON</assignToReference>
            <name>LogJson</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>Logs</assignToReference>
            <name>LogList</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Log_Address_Has_Existing_Data_True</name>
        <label>Log: Address Has Existing Data</label>
        <locationX>897</locationX>
        <locationY>4466</locationY>
        <actionName>movedata__WriteToLogFlowComponent</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Evaluate_Overwrite_All_Address_Ignore_Address_When_Not_Empty</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>Detail</name>
            <value>
                <stringValue>true</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>LogList</name>
            <value>
                <elementReference>Logs</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Message</name>
            <value>
                <stringValue>Mailing Address - Has Existing Data</stringValue>
            </value>
        </inputParameters>
        <nameSegment>movedata__WriteToLogFlowComponent</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>LogsJSON</assignToReference>
            <name>LogJson</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>Logs</assignToReference>
            <name>LogList</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Log_Address_Quality_Index</name>
        <label>Log: Address Quality Index</label>
        <locationX>446</locationX>
        <locationY>3458</locationY>
        <actionName>movedata__WriteToLogFlowComponent</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Evaluate_Address</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>Detail</name>
            <value>
                <stringValue>Skipping Address - Below Quality Index ({!MailingAddress_QualityIndex} &lt; {!Config_ContactAddressQualityIndex})</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>LogList</name>
            <value>
                <elementReference>Logs</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Message</name>
            <value>
                <stringValue>aAddress Quality Index</stringValue>
            </value>
        </inputParameters>
        <nameSegment>movedata__WriteToLogFlowComponent</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>LogsJSON</assignToReference>
            <name>LogJson</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>Logs</assignToReference>
            <name>LogList</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Log_Could_not_find_specified_Person_Account_Record_Type</name>
        <label>Log: Could not find specified Person Account Record Type</label>
        <locationX>886</locationX>
        <locationY>1166</locationY>
        <actionName>movedata__WriteToLogFlowComponent</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Set_Record_Type</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>Detail</name>
            <value>
                <stringValue>Please config this via MoveData Settings interface.  [Status: {!Config_ContactPersonAccountRT}]</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>LogList</name>
            <value>
                <elementReference>Logs</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Message</name>
            <value>
                <stringValue>WARN: Could not find specified Person Account Record Type</stringValue>
            </value>
        </inputParameters>
        <nameSegment>movedata__WriteToLogFlowComponent</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>LogsJSON</assignToReference>
            <name>LogJson</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>Logs</assignToReference>
            <name>LogList</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Log_Ignore_Quality_Index_when_No_Data</name>
        <label>Log: Ignore Quality Index when No Data</label>
        <locationX>1205</locationX>
        <locationY>4790</locationY>
        <actionName>movedata__WriteToLogFlowComponent</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Set_Address_Quality_Score_to_100</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>Detail</name>
            <value>
                <stringValue>ContactIgnoreAddressWhenNotEmpty: {!Config_ContactIgnoreAddressWhenNotEmpty}</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>LogList</name>
            <value>
                <elementReference>Logs</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Message</name>
            <value>
                <stringValue>Overwriting Address Score to 100% - Force Write when No Address</stringValue>
            </value>
        </inputParameters>
        <nameSegment>movedata__WriteToLogFlowComponent</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>LogsJSON</assignToReference>
            <name>LogJson</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>Logs</assignToReference>
            <name>LogList</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Log_Protect_Fields</name>
        <label>Log: Protect Fields</label>
        <locationX>50</locationX>
        <locationY>350</locationY>
        <actionName>movedata__WriteToLogFlowComponent</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Set_Protect_Names_to_True</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>Detail</name>
            <value>
                <stringValue>Enabled / Ignoring First Name, Last Name</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>LogList</name>
            <value>
                <elementReference>Logs</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Message</name>
            <value>
                <stringValue>Protect Fields</stringValue>
            </value>
        </inputParameters>
        <nameSegment>movedata__WriteToLogFlowComponent</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>LogsJSON</assignToReference>
            <name>LogJson</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>Logs</assignToReference>
            <name>LogList</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Log_Protect_Fields_Detailed</name>
        <label>Log: Protect Fields</label>
        <locationX>314</locationX>
        <locationY>350</locationY>
        <actionName>movedata__WriteToLogFlowComponent</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Set_Protect_Names_to_True_Detailed</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>Detail</name>
            <value>
                <stringValue>Enabled / Ignoring First Name, Last Name + Email, Address &amp; Phone</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>LogList</name>
            <value>
                <elementReference>Logs</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Message</name>
            <value>
                <stringValue>Protect Fields</stringValue>
            </value>
        </inputParameters>
        <nameSegment>movedata__WriteToLogFlowComponent</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>LogsJSON</assignToReference>
            <name>LogJson</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>Logs</assignToReference>
            <name>LogList</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Log_Protect_Record</name>
        <label>Log: Protect Record</label>
        <locationX>578</locationX>
        <locationY>350</locationY>
        <actionName>movedata__WriteToLogFlowComponent</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>Detail</name>
            <value>
                <stringValue>Enabled / Skipping Mapping</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>LogList</name>
            <value>
                <elementReference>Logs</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Message</name>
            <value>
                <stringValue>Protect Record</stringValue>
            </value>
        </inputParameters>
        <nameSegment>movedata__WriteToLogFlowComponent</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>LogsJSON</assignToReference>
            <name>LogJson</name>
        </outputParameters>
        <outputParameters>
            <assignToReference>Logs</assignToReference>
            <name>LogList</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Set_First_Name</name>
        <label>Set First Name</label>
        <locationX>534</locationX>
        <locationY>1958</locationY>
        <actionName>movedata__SetValueComponent</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Evaluate_Last_Name</targetReference>
        </connector>
        <dataTypeMappings>
            <typeName>T__Record</typeName>
            <typeValue>Account</typeValue>
        </dataTypeMappings>
        <dataTypeMappings>
            <typeName>U__Record</typeName>
            <typeValue>Account</typeValue>
        </dataTypeMappings>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>FieldName</name>
            <value>
                <stringValue>FirstName</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Record</name>
            <value>
                <elementReference>Record</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringIgnoreMixedCase</name>
            <value>
                <elementReference>Config_AdvancedIgnoreMixedCase</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringMode</name>
            <value>
                <elementReference>Config_ContactNameFirstCase</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringValue</name>
            <value>
                <elementReference>FirstNameTrimmed</elementReference>
            </value>
        </inputParameters>
        <nameSegment>movedata__SetValueComponent</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>Record</assignToReference>
            <name>Record</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Set_Last_Name</name>
        <label>Set Last Name</label>
        <locationX>402</locationX>
        <locationY>2258</locationY>
        <actionName>movedata__SetValueComponent</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Evaluate_Birthday</targetReference>
        </connector>
        <dataTypeMappings>
            <typeName>T__Record</typeName>
            <typeValue>Account</typeValue>
        </dataTypeMappings>
        <dataTypeMappings>
            <typeName>U__Record</typeName>
            <typeValue>Account</typeValue>
        </dataTypeMappings>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>FieldName</name>
            <value>
                <stringValue>LastName</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Record</name>
            <value>
                <elementReference>Record</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringIgnoreMixedCase</name>
            <value>
                <elementReference>Config_AdvancedIgnoreMixedCase</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringMode</name>
            <value>
                <elementReference>Config_ContactNameLastCase</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringValue</name>
            <value>
                <elementReference>LastNameTrimmed</elementReference>
            </value>
        </inputParameters>
        <nameSegment>movedata__SetValueComponent</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>Record</assignToReference>
            <name>Record</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Set_Mailing_City_Address</name>
        <label>Set Mailing City Address</label>
        <locationX>1018</locationX>
        <locationY>6266</locationY>
        <actionName>movedata__SetValueComponent</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Eval_State</targetReference>
        </connector>
        <dataTypeMappings>
            <typeName>T__Record</typeName>
            <typeValue>Account</typeValue>
        </dataTypeMappings>
        <dataTypeMappings>
            <typeName>U__Record</typeName>
            <typeValue>Account</typeValue>
        </dataTypeMappings>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>FieldName</name>
            <value>
                <stringValue>PersonMailingCity</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Record</name>
            <value>
                <elementReference>Record</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringIgnoreMixedCase</name>
            <value>
                <elementReference>Config_AdvancedIgnoreMixedCase</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringMode</name>
            <value>
                <elementReference>Config_ContactAddressCityCase</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringValue</name>
            <value>
                <elementReference>MailingAddress_City</elementReference>
            </value>
        </inputParameters>
        <nameSegment>movedata__SetValueComponent</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>Record</assignToReference>
            <name>Record</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Set_Mailing_Country_Address</name>
        <label>Set Mailing Country Address</label>
        <locationX>1018</locationX>
        <locationY>7634</locationY>
        <actionName>movedata__SetValueComponent</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Eval_Postcode</targetReference>
        </connector>
        <dataTypeMappings>
            <typeName>T__Record</typeName>
            <typeValue>Account</typeValue>
        </dataTypeMappings>
        <dataTypeMappings>
            <typeName>U__Record</typeName>
            <typeValue>Account</typeValue>
        </dataTypeMappings>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>FieldName</name>
            <value>
                <stringValue>PersonMailingCountry</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Record</name>
            <value>
                <elementReference>Record</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringIgnoreMixedCase</name>
            <value>
                <elementReference>Config_AdvancedIgnoreMixedCase</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringMode</name>
            <value>
                <elementReference>Config_ContactAddressCountryCase</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringValue</name>
            <value>
                <elementReference>MailingAddress_Country</elementReference>
            </value>
        </inputParameters>
        <nameSegment>movedata__SetValueComponent</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>Record</assignToReference>
            <name>Record</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Set_Mailing_State_Address</name>
        <label>Set Mailing State Address</label>
        <locationX>1018</locationX>
        <locationY>6950</locationY>
        <actionName>movedata__SetValueComponent</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Eval_Country</targetReference>
        </connector>
        <dataTypeMappings>
            <typeName>T__Record</typeName>
            <typeValue>Account</typeValue>
        </dataTypeMappings>
        <dataTypeMappings>
            <typeName>U__Record</typeName>
            <typeValue>Account</typeValue>
        </dataTypeMappings>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>FieldName</name>
            <value>
                <stringValue>PersonMailingState</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Record</name>
            <value>
                <elementReference>Record</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringIgnoreMixedCase</name>
            <value>
                <elementReference>Config_AdvancedIgnoreMixedCase</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringMode</name>
            <value>
                <elementReference>Config_ContactAddressStateCase</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringValue</name>
            <value>
                <elementReference>MailingAddress_State</elementReference>
            </value>
        </inputParameters>
        <nameSegment>movedata__SetValueComponent</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>Record</assignToReference>
            <name>Record</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Set_Mailing_Street_Address</name>
        <label>Set Mailing Street Address</label>
        <locationX>1018</locationX>
        <locationY>5582</locationY>
        <actionName>movedata__SetValueComponent</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Eval_City</targetReference>
        </connector>
        <dataTypeMappings>
            <typeName>T__Record</typeName>
            <typeValue>Account</typeValue>
        </dataTypeMappings>
        <dataTypeMappings>
            <typeName>U__Record</typeName>
            <typeValue>Account</typeValue>
        </dataTypeMappings>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>FieldName</name>
            <value>
                <stringValue>PersonMailingStreet</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Record</name>
            <value>
                <elementReference>Record</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringIgnoreMixedCase</name>
            <value>
                <elementReference>Config_AdvancedIgnoreMixedCase</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringMode</name>
            <value>
                <elementReference>Config_ContactAddressStreetCase</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringValue</name>
            <value>
                <elementReference>MailingAddress_Street</elementReference>
            </value>
        </inputParameters>
        <nameSegment>movedata__SetValueComponent</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>Record</assignToReference>
            <name>Record</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Set_Other_City_Address</name>
        <label>Set Other City Address</label>
        <locationX>1898</locationX>
        <locationY>6266</locationY>
        <actionName>movedata__SetValueComponent</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Eval_State</targetReference>
        </connector>
        <dataTypeMappings>
            <typeName>T__Record</typeName>
            <typeValue>Account</typeValue>
        </dataTypeMappings>
        <dataTypeMappings>
            <typeName>U__Record</typeName>
            <typeValue>Account</typeValue>
        </dataTypeMappings>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>FieldName</name>
            <value>
                <stringValue>PersonOtherCity</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Record</name>
            <value>
                <elementReference>Record</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringIgnoreMixedCase</name>
            <value>
                <elementReference>Config_AdvancedIgnoreMixedCase</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringMode</name>
            <value>
                <elementReference>Config_ContactAddressCityCase</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringValue</name>
            <value>
                <elementReference>MailingAddress_City</elementReference>
            </value>
        </inputParameters>
        <nameSegment>movedata__SetValueComponent</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>Record</assignToReference>
            <name>Record</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Set_Other_Country_Address</name>
        <label>Set Other Country Address</label>
        <locationX>1898</locationX>
        <locationY>7634</locationY>
        <actionName>movedata__SetValueComponent</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Eval_Postcode</targetReference>
        </connector>
        <dataTypeMappings>
            <typeName>T__Record</typeName>
            <typeValue>Account</typeValue>
        </dataTypeMappings>
        <dataTypeMappings>
            <typeName>U__Record</typeName>
            <typeValue>Account</typeValue>
        </dataTypeMappings>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>FieldName</name>
            <value>
                <stringValue>PersonOtherCountry</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Record</name>
            <value>
                <elementReference>Record</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringIgnoreMixedCase</name>
            <value>
                <elementReference>Config_AdvancedIgnoreMixedCase</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringMode</name>
            <value>
                <elementReference>Config_ContactAddressCountryCase</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringValue</name>
            <value>
                <elementReference>MailingAddress_Country</elementReference>
            </value>
        </inputParameters>
        <nameSegment>movedata__SetValueComponent</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>Record</assignToReference>
            <name>Record</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Set_Other_State_Address</name>
        <label>Set Other State</label>
        <locationX>1898</locationX>
        <locationY>6950</locationY>
        <actionName>movedata__SetValueComponent</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Eval_Country</targetReference>
        </connector>
        <dataTypeMappings>
            <typeName>T__Record</typeName>
            <typeValue>Account</typeValue>
        </dataTypeMappings>
        <dataTypeMappings>
            <typeName>U__Record</typeName>
            <typeValue>Account</typeValue>
        </dataTypeMappings>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>FieldName</name>
            <value>
                <stringValue>PersonOtherState</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Record</name>
            <value>
                <elementReference>Record</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringIgnoreMixedCase</name>
            <value>
                <elementReference>Config_AdvancedIgnoreMixedCase</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringMode</name>
            <value>
                <elementReference>Config_ContactAddressStateCase</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringValue</name>
            <value>
                <elementReference>MailingAddress_State</elementReference>
            </value>
        </inputParameters>
        <nameSegment>movedata__SetValueComponent</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>Record</assignToReference>
            <name>Record</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>Set_Other_Street_Address</name>
        <label>Set Other Street Address</label>
        <locationX>1898</locationX>
        <locationY>5582</locationY>
        <actionName>movedata__SetValueComponent</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Eval_City</targetReference>
        </connector>
        <dataTypeMappings>
            <typeName>T__Record</typeName>
            <typeValue>Account</typeValue>
        </dataTypeMappings>
        <dataTypeMappings>
            <typeName>U__Record</typeName>
            <typeValue>Account</typeValue>
        </dataTypeMappings>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>FieldName</name>
            <value>
                <stringValue>PersonOtherStreet</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Record</name>
            <value>
                <elementReference>Record</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringIgnoreMixedCase</name>
            <value>
                <elementReference>Config_AdvancedIgnoreMixedCase</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringMode</name>
            <value>
                <elementReference>Config_ContactAddressStreetCase</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>StringValue</name>
            <value>
                <elementReference>MailingAddress_Street</elementReference>
            </value>
        </inputParameters>
        <nameSegment>movedata__SetValueComponent</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>Record</assignToReference>
            <name>Record</name>
        </outputParameters>
    </actionCalls>
    <apiVersion>60.0</apiVersion>
    <assignments>
        <name>Default_Last_Name</name>
        <label>Default Last Name</label>
        <locationX>666</locationX>
        <locationY>2258</locationY>
        <assignmentItems>
            <assignToReference>Record.LastName</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Config_ContactDefaultLastName</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Evaluate_Birthday</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Address_Quality_Score_to_100</name>
        <label>Set Address Quality Score to 100%</label>
        <locationX>1205</locationX>
        <locationY>4898</locationY>
        <assignmentItems>
            <assignToReference>MailingAddress_QualityIndex</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Config_ContactAddressQualityIndex</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Eval_Street_Address</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Birthday</name>
        <label>Set Birthday</label>
        <locationX>534</locationX>
        <locationY>2558</locationY>
        <assignmentItems>
            <assignToReference>Record.PersonBirthdate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Birthday</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Evaluate_Phone</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Email</name>
        <label>Set Email</label>
        <locationX>534</locationX>
        <locationY>3158</locationY>
        <assignmentItems>
            <assignToReference>Record.PersonEmail</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>EmailTrimmed</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Evaluate_Address_Quality_Score</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_ForceIgnoreAddress_to_True</name>
        <label>Set ForceIgnoreAddress to True</label>
        <locationX>765</locationX>
        <locationY>4682</locationY>
        <assignmentItems>
            <assignToReference>ForceIgnoreAddress</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Eval_Street_Address</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_ForceOverwriteAddress_to_True</name>
        <label>Set ForceOverwriteAddress to True</label>
        <locationX>908</locationX>
        <locationY>3974</locationY>
        <assignmentItems>
            <assignToReference>ForceOverwriteAddress</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Log_Address_Force_Overwrite</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Mailing_City_to_NULL</name>
        <label>Set Mailing City to NULL</label>
        <locationX>754</locationX>
        <locationY>6266</locationY>
        <assignmentItems>
            <assignToReference>Record.PersonMailingCity</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <connector>
            <targetReference>Eval_State</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Mailing_Country_to_NULL</name>
        <label>Set Mailing Country to NULL</label>
        <locationX>754</locationX>
        <locationY>7634</locationY>
        <assignmentItems>
            <assignToReference>Record.PersonMailingCountry</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <connector>
            <targetReference>Eval_Postcode</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Mailing_Postcode</name>
        <label>Set Mailing Postcode</label>
        <locationX>1062</locationX>
        <locationY>8210</locationY>
        <assignmentItems>
            <assignToReference>Record.PersonMailingPostalCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>MailingAddress_PostcodeTrimmed</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Set_Mailing_State_to_NULL</name>
        <label>Set Mailing State to NULL</label>
        <locationX>754</locationX>
        <locationY>6950</locationY>
        <assignmentItems>
            <assignToReference>Record.PersonMailingState</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <connector>
            <targetReference>Eval_Country</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Mailing_Street_to_NULL</name>
        <label>Set Mailing Street to NULL</label>
        <locationX>754</locationX>
        <locationY>5582</locationY>
        <assignmentItems>
            <assignToReference>Record.PersonMailingStreet</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <connector>
            <targetReference>Eval_City</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Other_City_to_NULL</name>
        <label>Set Other City to NULL</label>
        <locationX>1634</locationX>
        <locationY>6266</locationY>
        <assignmentItems>
            <assignToReference>Record.PersonOtherCity</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <connector>
            <targetReference>Eval_State</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Other_Country_to_NULL</name>
        <label>Set Other Country to NULL</label>
        <locationX>1634</locationX>
        <locationY>7634</locationY>
        <assignmentItems>
            <assignToReference>Record.PersonOtherCountry</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <connector>
            <targetReference>Eval_Postcode</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Other_Postcode</name>
        <label>Set Other Postcode</label>
        <locationX>1854</locationX>
        <locationY>8210</locationY>
        <assignmentItems>
            <assignToReference>Record.PersonOtherPostalCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>MailingAddress_PostcodeTrimmed</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Set_Other_State_to_NULL</name>
        <label>Set Other State to NULL</label>
        <locationX>1634</locationX>
        <locationY>6950</locationY>
        <assignmentItems>
            <assignToReference>Record.PersonOtherState</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <connector>
            <targetReference>Eval_Country</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Other_Street_to_NULL</name>
        <label>Set Other Street to NULL</label>
        <locationX>1634</locationX>
        <locationY>5582</locationY>
        <assignmentItems>
            <assignToReference>Record.PersonOtherStreet</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <connector>
            <targetReference>Eval_City</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Phone</name>
        <label>Set Phone</label>
        <locationX>534</locationX>
        <locationY>2858</locationY>
        <assignmentItems>
            <assignToReference>Record.Phone</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>PhoneTrimmed</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Evaluate_Email</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Protect_Email_Address_Phone_to_True</name>
        <label>Set Protect Email / Address / Phone to True</label>
        <locationX>314</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>ProtectOther</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Evaluate_Record_Type</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Protect_Names_to_True</name>
        <label>Set Protect Names to True</label>
        <locationX>50</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>ProtectNames</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Evaluate_Record_Type</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Protect_Names_to_True_Detailed</name>
        <label>Set Protect Names to True</label>
        <locationX>314</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>ProtectNames</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_Protect_Email_Address_Phone_to_True</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Record_Type</name>
        <label>Set Record Type</label>
        <locationX>798</locationX>
        <locationY>1358</locationY>
        <assignmentItems>
            <assignToReference>Record.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Person_Account_Record_Type.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Evaluate_Salutation</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Salutation</name>
        <label>Set Salutation</label>
        <locationX>534</locationX>
        <locationY>1658</locationY>
        <assignmentItems>
            <assignToReference>Record.Salutation</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Salutation</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Evaluate_First_Name</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Eval_City</name>
        <label>Eval City</label>
        <locationX>1194</locationX>
        <locationY>5942</locationY>
        <defaultConnector>
            <targetReference>Eval_State</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Missing</defaultConnectorLabel>
        <rules>
            <name>City_Ignore</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactIgnoreAddressWhenNotEmpty</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Eval_State</targetReference>
            </connector>
            <label>Ignore</label>
        </rules>
        <rules>
            <name>City_Mailing</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressMailing</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ForceOverwriteAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_City</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Mailing_City_Evaluate_Attribute</targetReference>
            </connector>
            <label>Mailing</label>
        </rules>
        <rules>
            <name>City_Other</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressMailing</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ForceOverwriteAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_City</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Other_City_Evaluate_Attribute</targetReference>
            </connector>
            <label>Other</label>
        </rules>
    </decisions>
    <decisions>
        <name>Eval_Country</name>
        <label>Eval Country</label>
        <locationX>1194</locationX>
        <locationY>7310</locationY>
        <defaultConnector>
            <targetReference>Eval_Postcode</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Missing</defaultConnectorLabel>
        <rules>
            <name>Country_Ignore</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactIgnoreAddressWhenNotEmpty</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Eval_Postcode</targetReference>
            </connector>
            <label>Ignore</label>
        </rules>
        <rules>
            <name>Country_Mailing</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressMailing</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ForceOverwriteAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_Country</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Mailing_Country_Evaluate_Attribute</targetReference>
            </connector>
            <label>Mailing</label>
        </rules>
        <rules>
            <name>Country_Other</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressMailing</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ForceOverwriteAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_Country</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Other_Country_Evaluate_Attribute</targetReference>
            </connector>
            <label>Other</label>
        </rules>
    </decisions>
    <decisions>
        <name>Eval_Postcode</name>
        <label>Eval Postcode</label>
        <locationX>1194</locationX>
        <locationY>7994</locationY>
        <defaultConnectorLabel>Missing</defaultConnectorLabel>
        <rules>
            <name>Postcode_Ignore</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactIgnoreAddressWhenNotEmpty</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Ignore</label>
        </rules>
        <rules>
            <name>Postcode_Mailing</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressMailing</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ForceOverwriteAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_Postcode</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Mailing_Postcode_Evaluate_Attribute</targetReference>
            </connector>
            <label>Mailing</label>
        </rules>
        <rules>
            <name>Postcode_Other</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressMailing</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ForceOverwriteAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_Postcode</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Other_Postcode_Evaluate_Attribute</targetReference>
            </connector>
            <label>Other</label>
        </rules>
    </decisions>
    <decisions>
        <name>Eval_State</name>
        <label>Eval State</label>
        <locationX>1194</locationX>
        <locationY>6626</locationY>
        <defaultConnector>
            <targetReference>Eval_Country</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Missing</defaultConnectorLabel>
        <rules>
            <name>State_Ignore</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactIgnoreAddressWhenNotEmpty</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Eval_Country</targetReference>
            </connector>
            <label>Ignore</label>
        </rules>
        <rules>
            <name>State_Mailing</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressMailing</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ForceOverwriteAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_State</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Mailing_State_Evaluate_Attribute</targetReference>
            </connector>
            <label>Mailing</label>
        </rules>
        <rules>
            <name>State_Other</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressMailing</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ForceOverwriteAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_State</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Other_State_Evaluate_Attribute</targetReference>
            </connector>
            <label>Other</label>
        </rules>
    </decisions>
    <decisions>
        <name>Eval_Street_Address</name>
        <label>Eval Street Address</label>
        <locationX>1194</locationX>
        <locationY>5258</locationY>
        <defaultConnector>
            <targetReference>Eval_City</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Missing</defaultConnectorLabel>
        <rules>
            <name>Street_Address_Ignore</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactIgnoreAddressWhenNotEmpty</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Eval_City</targetReference>
            </connector>
            <label>Ignore</label>
        </rules>
        <rules>
            <name>Street_Address_Mailing</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressMailing</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ForceOverwriteAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_Street</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Evaluate_Attribute_Mailing_Street</targetReference>
            </connector>
            <label>Mailing</label>
        </rules>
        <rules>
            <name>Street_Address_Other</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressMailing</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ForceOverwriteAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_Street</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Other_Street_Evaluate_Attribute</targetReference>
            </connector>
            <label>Other</label>
        </rules>
    </decisions>
    <decisions>
        <name>Evaluate_Address</name>
        <label>Evaluate Address</label>
        <locationX>578</locationX>
        <locationY>3650</locationY>
        <defaultConnector>
            <targetReference>Evaluate_Force_Overwrite_All_Address_Fields</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Process</defaultConnectorLabel>
        <rules>
            <name>Address_Ignore</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactIgnoreAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ProtectOther</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Ignore</label>
        </rules>
    </decisions>
    <decisions>
        <name>Evaluate_Address_Quality_Score</name>
        <label>Evaluate Address Quality Score</label>
        <locationX>578</locationX>
        <locationY>3350</locationY>
        <defaultConnector>
            <targetReference>Evaluate_Address</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Missing / Greater Than Quality Index</defaultConnectorLabel>
        <rules>
            <name>Log_Below_Quality_Index</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressQualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>Config_ContactAddressQualityIndex</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Log_Address_Quality_Index</targetReference>
            </connector>
            <label>Below Quality Score</label>
        </rules>
    </decisions>
    <decisions>
        <name>Evaluate_Address_Quality_Score_No_Data</name>
        <label>Evaluate Address Quality Score</label>
        <locationX>1491</locationX>
        <locationY>4574</locationY>
        <defaultConnector>
            <targetReference>Eval_Street_Address</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>Below_Quality_Score</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressQualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>Config_ContactAddressQualityIndex</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Evaluate_Ignore_Quality_Index_when_No_Address</targetReference>
            </connector>
            <label>Below Quality Score</label>
        </rules>
    </decisions>
    <decisions>
        <name>Evaluate_Attribute_Mailing_Street</name>
        <label>Evaluate Attribute</label>
        <locationX>644</locationX>
        <locationY>5366</locationY>
        <defaultConnector>
            <targetReference>Is_Value_Null_Street</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Set Value</defaultConnectorLabel>
        <rules>
            <name>Mailing_Street_Ignore_When_Not_Empty</name>
            <conditionLogic>1 OR (2 AND 3 AND 4)</conditionLogic>
            <conditions>
                <leftValueReference>ForceIgnoreAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingStreet</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingStreet</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Config_ContactIgnoreAddressWhenNotEmpty</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Eval_City</targetReference>
            </connector>
            <label>Ignore When Not Empty</label>
        </rules>
        <rules>
            <name>Street_Address_Below_Quality_Index</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressQualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>Config_ContactAddressQualityIndex</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Eval_City</targetReference>
            </connector>
            <label>Below Quality Index</label>
        </rules>
    </decisions>
    <decisions>
        <name>Evaluate_Birthday</name>
        <label>Evaluate Birthday</label>
        <locationX>578</locationX>
        <locationY>2450</locationY>
        <defaultConnector>
            <targetReference>Evaluate_Phone</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Missing</defaultConnectorLabel>
        <rules>
            <name>Birthday_Ignore</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactIgnoreBirthday</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Evaluate_Phone</targetReference>
            </connector>
            <label>Ignore</label>
        </rules>
        <rules>
            <name>Birthday_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Birthday</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Birthday</targetReference>
            </connector>
            <label>Exists</label>
        </rules>
    </decisions>
    <decisions>
        <name>Evaluate_Email</name>
        <label>Evaluate Email</label>
        <locationX>578</locationX>
        <locationY>3050</locationY>
        <defaultConnector>
            <targetReference>Evaluate_Address_Quality_Score</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Missing</defaultConnectorLabel>
        <rules>
            <name>Email_Ignore</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactIgnoreEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ProtectOther</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Evaluate_Address_Quality_Score</targetReference>
            </connector>
            <label>Ignore</label>
        </rules>
        <rules>
            <name>Email_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Email</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Email</targetReference>
            </connector>
            <label>Exists</label>
        </rules>
    </decisions>
    <decisions>
        <name>Evaluate_Existing_Values_On_Address_Fields</name>
        <label>Evaluate Existing Values On Address Fields</label>
        <locationX>1194</locationX>
        <locationY>4358</locationY>
        <defaultConnector>
            <targetReference>Log_Address_Has_Existing_Data_False</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>False</defaultConnectorLabel>
        <rules>
            <name>Existing_Values_Mailing</name>
            <conditionLogic>1 AND ((2 AND 3 AND 4) OR (5 AND 6 AND 7) OR (8 AND 9 AND 10) OR (11 AND 12 AND 13) OR (14 AND 15 AND 16))</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressMailing</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingStreet</leftValueReference>
                <operator>WasSet</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingStreet</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingStreet</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingCity</leftValueReference>
                <operator>WasSet</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingCity</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingCity</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingState</leftValueReference>
                <operator>WasSet</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingState</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingState</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingPostalCode</leftValueReference>
                <operator>WasSet</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingPostalCode</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingPostalCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingCountry</leftValueReference>
                <operator>WasSet</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingCountry</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingCountry</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Log_Address_Has_Existing_Data_True</targetReference>
            </connector>
            <label>True (Mailing)</label>
        </rules>
    </decisions>
    <decisions>
        <name>Evaluate_First_Name</name>
        <label>Evaluate First Name</label>
        <locationX>578</locationX>
        <locationY>1850</locationY>
        <defaultConnector>
            <targetReference>Evaluate_Last_Name</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Missing</defaultConnectorLabel>
        <rules>
            <name>First_Name_Ignore</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactIgnoreFirstName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ProtectNames</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Evaluate_Last_Name</targetReference>
            </connector>
            <label>Ignore</label>
        </rules>
        <rules>
            <name>First_Name_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>FirstName</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_First_Name</targetReference>
            </connector>
            <label>Exists</label>
        </rules>
    </decisions>
    <decisions>
        <name>Evaluate_Force_Overwrite_All_Address_Fields</name>
        <label>Evaluate Force Overwrite All Address Fields</label>
        <locationX>1194</locationX>
        <locationY>3758</locationY>
        <defaultConnector>
            <targetReference>Evaluate_Existing_Values_On_Address_Fields</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>False</defaultConnectorLabel>
        <rules>
            <name>Force_Overwrite_True</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressOverwriteAll</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <connector>
                <targetReference>Have_Any_Address_Values</targetReference>
            </connector>
            <label>True</label>
        </rules>
    </decisions>
    <decisions>
        <name>Evaluate_Ignore_Quality_Index_when_No_Address</name>
        <label>Evaluate Ignore Quality Index when No Address</label>
        <locationX>1337</locationX>
        <locationY>4682</locationY>
        <defaultConnector>
            <targetReference>Eval_Street_Address</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_Ignore_Quality_No_Address</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressQualityWriteNew</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <connector>
                <targetReference>Log_Ignore_Quality_Index_when_No_Data</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Evaluate_Last_Name</name>
        <label>Evaluate Last Name</label>
        <locationX>578</locationX>
        <locationY>2150</locationY>
        <defaultConnector>
            <targetReference>Evaluate_Birthday</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Missing</defaultConnectorLabel>
        <rules>
            <name>Last_Name_Ignore</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactIgnoreLastName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ProtectNames</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Evaluate_Birthday</targetReference>
            </connector>
            <label>Ignore</label>
        </rules>
        <rules>
            <name>Last_Name_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>LastName</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Last_Name</targetReference>
            </connector>
            <label>Exists</label>
        </rules>
        <rules>
            <name>Last_Name_Default</name>
            <conditionLogic>1 OR (2 AND 3)</conditionLogic>
            <conditions>
                <leftValueReference>Record.LastName</leftValueReference>
                <operator>WasSet</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.LastName</leftValueReference>
                <operator>WasSet</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.LastName</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Default_Last_Name</targetReference>
            </connector>
            <label>Default</label>
        </rules>
    </decisions>
    <decisions>
        <name>Evaluate_Overwrite_All_Address_Ignore_Address_When_Not_Empty</name>
        <label>Evaluate Overwrite All Address &amp; Ignore Address When Not Empty</label>
        <locationX>897</locationX>
        <locationY>4574</locationY>
        <defaultConnector>
            <targetReference>Eval_Street_Address</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_ContactAddressOverwriteAll</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressOverwriteAll</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Config_ContactIgnoreAddressWhenNotEmpty</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_ForceIgnoreAddress_to_True</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Evaluate_Phone</name>
        <label>Evaluate Phone</label>
        <locationX>578</locationX>
        <locationY>2750</locationY>
        <defaultConnector>
            <targetReference>Evaluate_Email</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Missing</defaultConnectorLabel>
        <rules>
            <name>Phone_Ignore</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactIgnorePhone</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ProtectOther</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Evaluate_Email</targetReference>
            </connector>
            <label>Ignore</label>
        </rules>
        <rules>
            <name>Phone_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Phone</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Phone</targetReference>
            </connector>
            <label>Exists</label>
        </rules>
    </decisions>
    <decisions>
        <description>1: Never update the First Name / Last Name if Protected
2: Never update the First Name / Last Name / Email / Address / Phone if protected
3: Never update the Record if Protected</description>
        <name>Evaluate_Protection_Level</name>
        <label>Evaluate Protection Level</label>
        <locationX>314</locationX>
        <locationY>242</locationY>
        <defaultConnector>
            <targetReference>Log_Protect_Record</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Level 3: Record</defaultConnectorLabel>
        <rules>
            <name>Protect_Level_1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactProtectLevel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Log_Protect_Fields</targetReference>
            </connector>
            <label>Level 1: First &amp; Last Name</label>
        </rules>
        <rules>
            <name>Protect_Level_2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactProtectLevel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>2.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Log_Protect_Fields_Detailed</targetReference>
            </connector>
            <label>Level 2: Names + Other</label>
        </rules>
    </decisions>
    <decisions>
        <name>Evaluate_Record_Type</name>
        <label>Evaluate Record Type</label>
        <locationX>578</locationX>
        <locationY>842</locationY>
        <defaultConnector>
            <targetReference>Person_Account_Record_Type</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Exists</defaultConnectorLabel>
        <rules>
            <name>RecordType_Ignore</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactIgnoreRecordType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Evaluate_Salutation</targetReference>
            </connector>
            <label>Ignore</label>
        </rules>
        <rules>
            <name>RecordType_Retain</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Record.RecordTypeId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Evaluate_Salutation</targetReference>
            </connector>
            <label>Retain</label>
        </rules>
    </decisions>
    <decisions>
        <name>Evaluate_Salutation</name>
        <label>Evaluate Salutation</label>
        <locationX>578</locationX>
        <locationY>1550</locationY>
        <defaultConnector>
            <targetReference>Evaluate_First_Name</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Missing</defaultConnectorLabel>
        <rules>
            <name>Salutation_Ignore</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactIgnoreSalutation</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ProtectNames</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Evaluate_First_Name</targetReference>
            </connector>
            <label>Ignore</label>
        </rules>
        <rules>
            <name>Salutation_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Salutation</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Salutation</targetReference>
            </connector>
            <label>Exists</label>
        </rules>
    </decisions>
    <decisions>
        <name>Found_Record_Type</name>
        <label>Found Record Type?</label>
        <locationX>798</locationX>
        <locationY>1058</locationY>
        <defaultConnector>
            <targetReference>Log_Could_not_find_specified_Person_Account_Record_Type</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_Found_Record_Type</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Person_Account_Record_Type</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Person_Account_Record_Type.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Record_Type</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Have_Any_Address_Values</name>
        <label>Have Any Address Values</label>
        <locationX>1040</locationX>
        <locationY>3866</locationY>
        <defaultConnector>
            <targetReference>Log_Address_Force_Overwrite</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>False</defaultConnectorLabel>
        <rules>
            <name>Have_Any_Address_Values_True</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>MailingAddress_Street</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_City</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_State</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_Postcode</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_Country</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_ForceOverwriteAddress_to_True</targetReference>
            </connector>
            <label>True</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Protected</name>
        <label>Is Protected?</label>
        <locationX>578</locationX>
        <locationY>134</locationY>
        <defaultConnector>
            <targetReference>Evaluate_Record_Type</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Protected_Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Record.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.movedata__Protect_Name__c</leftValueReference>
                <operator>WasSet</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.movedata__Protect_Name__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>DuplicateCheck</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Evaluate_Protection_Level</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Value_Null_City</name>
        <label>Is Value Null?</label>
        <locationX>886</locationX>
        <locationY>6158</locationY>
        <defaultConnector>
            <targetReference>Set_Mailing_City_Address</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_Null_City</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>MailingAddress_City</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_City</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Mailing_City_to_NULL</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Value_Null_City_Other</name>
        <label>Is Value Null?</label>
        <locationX>1766</locationX>
        <locationY>6158</locationY>
        <defaultConnector>
            <targetReference>Set_Other_City_Address</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_Null_City_Other</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>MailingAddress_City</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_City</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Other_City_to_NULL</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Value_Null_Country</name>
        <label>Is Value Null?</label>
        <locationX>886</locationX>
        <locationY>7526</locationY>
        <defaultConnector>
            <targetReference>Set_Mailing_Country_Address</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_Null_Country</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>MailingAddress_Country</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_Country</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Mailing_Country_to_NULL</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Value_Null_Country_Other</name>
        <label>Is Value Null?</label>
        <locationX>1766</locationX>
        <locationY>7526</locationY>
        <defaultConnector>
            <targetReference>Set_Other_Country_Address</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_Null_Country_Other</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>MailingAddress_Country</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_Country</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Other_Country_to_NULL</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Value_Null_State</name>
        <label>Is Value Null?</label>
        <locationX>886</locationX>
        <locationY>6842</locationY>
        <defaultConnector>
            <targetReference>Set_Mailing_State_Address</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_Null_State</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>MailingAddress_State</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_State</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Mailing_State_to_NULL</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Value_Null_State_Other</name>
        <label>Is Value Null?</label>
        <locationX>1766</locationX>
        <locationY>6842</locationY>
        <defaultConnector>
            <targetReference>Set_Other_State_Address</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_Null_State_Other</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>MailingAddress_State</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_State</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Other_State_to_NULL</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Value_Null_Street</name>
        <label>Is Value Null?</label>
        <locationX>886</locationX>
        <locationY>5474</locationY>
        <defaultConnector>
            <targetReference>Set_Mailing_Street_Address</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_Null_Street</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>MailingAddress_Street</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_Street</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Mailing_Street_to_NULL</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Value_Null_Street_Other</name>
        <label>Is Value Null?</label>
        <locationX>1766</locationX>
        <locationY>5474</locationY>
        <defaultConnector>
            <targetReference>Set_Other_Street_Address</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Null_Street_Other</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>MailingAddress_Street</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_Street</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Other_Street_to_NULL</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Mailing_City_Evaluate_Attribute</name>
        <label>Evaluate Attribute</label>
        <locationX>644</locationX>
        <locationY>6050</locationY>
        <defaultConnector>
            <targetReference>Is_Value_Null_City</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Set Value</defaultConnectorLabel>
        <rules>
            <name>Mailing_City_Ignore_When_Not_Empty</name>
            <conditionLogic>1 OR (2 AND 3 AND 4)</conditionLogic>
            <conditions>
                <leftValueReference>ForceIgnoreAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingCity</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingCity</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Config_ContactIgnoreAddressWhenNotEmpty</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Eval_State</targetReference>
            </connector>
            <label>Ignore When Not Empty</label>
        </rules>
        <rules>
            <name>Mailing_City_Below_Quality_Index</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressQualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>Config_ContactAddressQualityIndex</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Eval_State</targetReference>
            </connector>
            <label>Below Quality Index</label>
        </rules>
    </decisions>
    <decisions>
        <name>Mailing_Country_Evaluate_Attribute</name>
        <label>Evaluate Attribute</label>
        <locationX>644</locationX>
        <locationY>7418</locationY>
        <defaultConnector>
            <targetReference>Is_Value_Null_Country</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Set Value</defaultConnectorLabel>
        <rules>
            <name>Mailing_Country_Ignore_When_Not_Empty</name>
            <conditionLogic>1 OR (2 AND 3 AND 4)</conditionLogic>
            <conditions>
                <leftValueReference>ForceIgnoreAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingCountry</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingCountry</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Config_ContactIgnoreAddressWhenNotEmpty</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Eval_Postcode</targetReference>
            </connector>
            <label>Ignore When Not Empty</label>
        </rules>
        <rules>
            <name>Mailing_Country_Below_Quality_Index</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressQualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>Config_ContactAddressQualityIndex</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Eval_Postcode</targetReference>
            </connector>
            <label>Below Quality Index</label>
        </rules>
    </decisions>
    <decisions>
        <name>Mailing_Postcode_Evaluate_Attribute</name>
        <label>Evaluate Attribute</label>
        <locationX>798</locationX>
        <locationY>8102</locationY>
        <defaultConnector>
            <targetReference>Set_Mailing_Postcode</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Set Value</defaultConnectorLabel>
        <rules>
            <name>Mailing_Postcode_Ignore_When_Not_Empty</name>
            <conditionLogic>1 OR (2 AND 3 AND 4)</conditionLogic>
            <conditions>
                <leftValueReference>ForceIgnoreAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingPostalCode</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingPostalCode</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Config_ContactIgnoreAddressWhenNotEmpty</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Ignore When Not Empty</label>
        </rules>
        <rules>
            <name>Mailing_Postcode_Below_Quality_Index</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressQualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>Config_ContactAddressQualityIndex</elementReference>
                </rightValue>
            </conditions>
            <label>Below Quality Index</label>
        </rules>
    </decisions>
    <decisions>
        <name>Mailing_State_Evaluate_Attribute</name>
        <label>Evaluate Attribute</label>
        <locationX>644</locationX>
        <locationY>6734</locationY>
        <defaultConnector>
            <targetReference>Is_Value_Null_State</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Set Value</defaultConnectorLabel>
        <rules>
            <name>Mailing_State_Ignore_When_Not_Empty</name>
            <conditionLogic>1 OR (2 AND 3 AND 4)</conditionLogic>
            <conditions>
                <leftValueReference>ForceIgnoreAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingState</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonMailingState</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Config_ContactIgnoreAddressWhenNotEmpty</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Eval_Country</targetReference>
            </connector>
            <label>Ignore When Not Empty</label>
        </rules>
        <rules>
            <name>Mailing_State_Below_Quality_Index</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressQualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>Config_ContactAddressQualityIndex</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Eval_Country</targetReference>
            </connector>
            <label>Below Quality Index</label>
        </rules>
    </decisions>
    <decisions>
        <name>Other_City_Evaluate_Attribute</name>
        <label>Evaluate Attribute</label>
        <locationX>1524</locationX>
        <locationY>6050</locationY>
        <defaultConnector>
            <targetReference>Is_Value_Null_City_Other</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Set Value</defaultConnectorLabel>
        <rules>
            <name>Other_City_Ignore_When_Not_Empty</name>
            <conditionLogic>1 OR (2 AND 3 AND 4)</conditionLogic>
            <conditions>
                <leftValueReference>ForceIgnoreAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonOtherCity</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonOtherCity</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Config_ContactIgnoreAddressWhenNotEmpty</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Eval_State</targetReference>
            </connector>
            <label>Ignore When Not Empty</label>
        </rules>
        <rules>
            <name>Other_City_Below_Quality_Index</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressQualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>Config_ContactAddressQualityIndex</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Eval_State</targetReference>
            </connector>
            <label>Below Quality Index</label>
        </rules>
    </decisions>
    <decisions>
        <name>Other_Country_Evaluate_Attribute</name>
        <label>Evaluate Attribute</label>
        <locationX>1524</locationX>
        <locationY>7418</locationY>
        <defaultConnector>
            <targetReference>Is_Value_Null_Country_Other</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Set Value</defaultConnectorLabel>
        <rules>
            <name>Other_Country_Ignore_When_Not_Empty</name>
            <conditionLogic>1 OR (2 AND 3 AND 4)</conditionLogic>
            <conditions>
                <leftValueReference>ForceIgnoreAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonOtherCountry</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonOtherCountry</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Config_ContactIgnoreAddressWhenNotEmpty</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Eval_Postcode</targetReference>
            </connector>
            <label>Ignore When Not Empty</label>
        </rules>
        <rules>
            <name>Other_Country_Below_Quality_Index</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressQualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>Config_ContactAddressQualityIndex</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Eval_Postcode</targetReference>
            </connector>
            <label>Below Quality Index</label>
        </rules>
    </decisions>
    <decisions>
        <name>Other_Postcode_Evaluate_Attribute</name>
        <label>Evaluate Attribute</label>
        <locationX>1590</locationX>
        <locationY>8102</locationY>
        <defaultConnector>
            <targetReference>Set_Other_Postcode</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Set Value</defaultConnectorLabel>
        <rules>
            <name>Other_Postcode_Ignore_When_Not_Empty</name>
            <conditionLogic>1 OR (2 AND 3 AND 4)</conditionLogic>
            <conditions>
                <leftValueReference>ForceIgnoreAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonOtherPostalCode</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonOtherPostalCode</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Config_ContactIgnoreAddressWhenNotEmpty</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Ignore When Not Empty</label>
        </rules>
        <rules>
            <name>Other_Postcode_Below_Quality_Index</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressQualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>Config_ContactAddressQualityIndex</elementReference>
                </rightValue>
            </conditions>
            <label>Below Quality Index</label>
        </rules>
    </decisions>
    <decisions>
        <name>Other_State_Evaluate_Attribute</name>
        <label>Evaluate Attribute</label>
        <locationX>1524</locationX>
        <locationY>6734</locationY>
        <defaultConnector>
            <targetReference>Is_Value_Null_State_Other</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Set Value</defaultConnectorLabel>
        <rules>
            <name>Other_State_Ignore_When_Not_Empty</name>
            <conditionLogic>1 OR (2 AND 3 AND 4)</conditionLogic>
            <conditions>
                <leftValueReference>ForceIgnoreAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonOtherState</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonOtherState</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Config_ContactIgnoreAddressWhenNotEmpty</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Eval_Country</targetReference>
            </connector>
            <label>Ignore When Not Empty</label>
        </rules>
        <rules>
            <name>Other_State_Below_Quality_Index</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressQualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>Config_ContactAddressQualityIndex</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Eval_Country</targetReference>
            </connector>
            <label>Below Quality Index</label>
        </rules>
    </decisions>
    <decisions>
        <name>Other_Street_Evaluate_Attribute</name>
        <label>Evaluate Attribute</label>
        <locationX>1524</locationX>
        <locationY>5366</locationY>
        <defaultConnector>
            <targetReference>Is_Value_Null_Street_Other</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Set Value</defaultConnectorLabel>
        <rules>
            <name>Other_Street_Ignore_When_Not_Empty</name>
            <conditionLogic>1 OR (2 AND 3 AND 4)</conditionLogic>
            <conditions>
                <leftValueReference>ForceIgnoreAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonOtherStreet</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Record.PersonOtherStreet</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Config_ContactIgnoreAddressWhenNotEmpty</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Eval_City</targetReference>
            </connector>
            <label>Ignore When Not Empty</label>
        </rules>
        <rules>
            <name>Other_Street_Below_Quality_Index</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Config_ContactAddressQualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>MailingAddress_QualityIndex</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>Config_ContactAddressQualityIndex</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Eval_City</targetReference>
            </connector>
            <label>Below Quality Index</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>EmailTrimmed</name>
        <dataType>String</dataType>
        <expression>IF(LEN({!Email}) == 0,
    NULL,
    IF(LEN({!Email}) &gt; 80,
        LEFT({!Email}, 80),
        {!Email}
    )
)</expression>
    </formulas>
    <formulas>
        <name>FirstNameTrimmed</name>
        <dataType>String</dataType>
        <expression>IF(LEN({!FirstName}) == 0,
    NULL,
    IF(LEN({!FirstName}) &gt; 40,
        LEFT({!FirstName}, 40),
        {!FirstName}
    )
)</expression>
    </formulas>
    <formulas>
        <name>LastNameTrimmed</name>
        <dataType>String</dataType>
        <expression>IF(LEN({!LastName}) == 0,
    NULL,
    IF(LEN({!LastName}) &gt; 80,
        LEFT({!LastName}, 80),
        {!LastName}
    )
)</expression>
    </formulas>
    <formulas>
        <name>MailingAddress_CityTrimmed</name>
        <dataType>String</dataType>
        <expression>IF(LEN({!MailingAddress_City}) == 0,
    NULL,
    IF(LEN({!MailingAddress_City}) &gt; 40,
        LEFT({!MailingAddress_City}, 40),
        {!MailingAddress_City}
    )
)</expression>
    </formulas>
    <formulas>
        <name>MailingAddress_CountryTrimmed</name>
        <dataType>String</dataType>
        <expression>IF(LEN({!MailingAddress_Country}) == 0,
    NULL,
    IF(LEN({!MailingAddress_Country}) &gt; 80,
        LEFT({!MailingAddress_Country}, 80),
        {!MailingAddress_Country}
    )
)</expression>
    </formulas>
    <formulas>
        <name>MailingAddress_PostcodeTrimmed</name>
        <dataType>String</dataType>
        <expression>IF(LEN({!MailingAddress_Postcode}) == 0,
    NULL,
    IF(LEN({!MailingAddress_Postcode}) &gt; 20,
        UPPER(LEFT({!MailingAddress_Postcode}, 20)),
        UPPER({!MailingAddress_Postcode})
    )
)</expression>
    </formulas>
    <formulas>
        <name>MailingAddress_StateTrimmed</name>
        <dataType>String</dataType>
        <expression>IF(LEN({!MailingAddress_State}) == 0,
    NULL,
    IF(LEN({!MailingAddress_State}) &gt; 80,
        LEFT({!MailingAddress_State}, 80),
        {!MailingAddress_State}
    )
)</expression>
    </formulas>
    <formulas>
        <name>MailingAddress_StreetTrimmed</name>
        <dataType>String</dataType>
        <expression>IF(LEN({!MailingAddress_Street}) == 0,
    NULL,
    IF(LEN({!MailingAddress_Street}) &gt; 255,
        LEFT({!MailingAddress_Street}, 255),
        {!MailingAddress_Street}
    )
)</expression>
    </formulas>
    <formulas>
        <name>PhoneTrimmed</name>
        <dataType>String</dataType>
        <expression>IF(LEN({!Phone}) == 0,
    NULL,
    IF(LEN({!Phone}) &gt; 40,
        LEFT({!Phone}, 40),
        {!Phone}
    )
)</expression>
    </formulas>
    <interviewLabel>MoveData_Donation_Contact_Mapping {!$Flow.CurrentDateTime}</interviewLabel>
    <isTemplate>true</isTemplate>
    <label>[MoveData] General: Contact - Mapping</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Person_Account_Record_Type</name>
        <label>Get Person Account Record Type</label>
        <locationX>798</locationX>
        <locationY>950</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Found_Record_Type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Config_ContactPersonAccountRT</elementReference>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Account</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>452</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Is_Protected</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>Birthday</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Config_AdvancedIgnoreMixedCase</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>Config_ContactAddressCityCase</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>Config_ContactAddressCountryCase</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>Config_ContactAddressMailing</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>true</booleanValue>
        </value>
    </variables>
    <variables>
        <name>Config_ContactAddressOverwriteAll</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>true</booleanValue>
        </value>
    </variables>
    <variables>
        <name>Config_ContactAddressQualityIndex</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>Config_ContactAddressQualityWriteNew</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>Config_ContactAddressStateCase</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>Config_ContactAddressStreetCase</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>Config_ContactDefaultLastName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>[Unknown]</stringValue>
        </value>
    </variables>
    <variables>
        <name>Config_ContactIgnoreAddress</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>Config_ContactIgnoreAddressWhenNotEmpty</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>Config_ContactIgnoreBirthday</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>Config_ContactIgnoreEmail</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>Config_ContactIgnoreFirstName</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>Config_ContactIgnoreLastName</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>Config_ContactIgnorePhone</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>Config_ContactIgnoreRecordType</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>Config_ContactIgnoreSalutation</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>Config_ContactNameFirstCase</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>Config_ContactNameLastCase</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>Config_ContactPersonAccountRT</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>PersonAccount</stringValue>
        </value>
    </variables>
    <variables>
        <description>If Protect_Name__c == true then
1: Never update the First Name / Last Name if Protected
2: Never update the First Name / Last Name / Email / Address / Phone if protected
3: Never update the Record if Protected</description>
        <name>Config_ContactProtectLevel</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>1.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>DuplicateCheck</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>Email</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>FirstName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ForceIgnoreAddress</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>ForceOverwriteAddress</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>LastName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Logs</name>
        <apexClass>movedata__MoveDataLogEntry</apexClass>
        <dataType>Apex</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>LogsJSON</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>MailingAddress_City</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>MailingAddress_Country</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>MailingAddress_Postcode</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>MailingAddress_QualityIndex</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>MailingAddress_State</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>MailingAddress_Street</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Phone</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ProtectNames</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>ProtectOther</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>Record</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>Salutation</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
